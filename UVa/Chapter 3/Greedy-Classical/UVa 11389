/*
 ID: swagchicken1
 PROG:
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <cstring>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vector <int> > vvi;
typedef pair<int, int> pii;
typedef pair < pair < int, int >, int > piii;
typedef pair < pair <int, int > , pair <int, int> > piiii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)

#define endl '\n';

#define mp make_pair
#define pb push_back
#define f first
#define s second

const int MOD = 1000000007;
double PI = 4*atan(1);

int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
 //     ofstream fout("trapped.out");
//      ifstream fin("trapped.in");
 int n,d,r;
 cin >> n >> d >> r;

 while(n!= 0) {
   int mor[100] = {};
   int aft[100] = {};
   FOR(i,0,n) {
     cin >> mor[i];
   }
   FOR(i,0,n) {
     cin >> aft[i];
   }
   sort(mor,mor+n);
   sort(aft,aft+n);
   int ot = 0;
   FOR(i,0,n) {
     ot += r*max(0, mor[i] + aft[n-1-i] - d);
   }
   cout << ot << endl;
   cin >> n >> d >> r;
 }
  //  fin.close();
//    fout.close();
}


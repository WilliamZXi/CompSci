/*
 ID: swagchicken1
 PROG:
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vector <int> > vvi;
typedef pair<int, int> pii;
typedef pair < pair < int, int >, int > piii;
typedef pair < pair <int, int > , pair <int, int> > piiii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)

#define endl '\n';

#define mp make_pair
#define pb push_back
#define f first
#define s second

const int MOD = 1000000007;
double PI = 4*atan(1);

int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
    //  ofstream fout("");
    //  ifstream fin("");
    int n; cin >> n;
    int counter = 1;
    while (n != 0) {
      int nums[1000] = {};
      FOR(i,0,n) {
        cin >> nums[i];
      }
      int m; cin >> m;
      cout << "Case " << counter << ":" << endl;
      FOR(a,0,m) {
      int target; cin >> target;
      int mindist = MOD;
      int mindistsum = 0;
      
      FOR(i,0,n) {
        FOR(j,i+1,n) {
          if(abs(target - nums[i] -nums[j]) < mindist) {
            mindist = abs(target - nums[i] -nums[j]);
            mindistsum = nums[i] + nums[j];
          }
        }
      }
      
      cout << "Closest sum to " <<  target << " is " <<  mindistsum << "." <<endl;
      }
      cin >> n;
      counter ++;
    }
    // fin.close();
    //  fout.close();
}


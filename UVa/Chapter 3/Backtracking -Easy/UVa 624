/*
 ID: swagchicken1
 PROG:
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vector <int> > vvi;
typedef pair<int, int> pii;
typedef pair < pair < int, int >, int > piii;
typedef pair < pair <int, int > , pair <int, int> > piiii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)

#define endl '\n';

#define mp make_pair
#define pb push_back
#define f first
#define s second

const int MOD = 1000000007;
double PI = 4*atan(1);

int dur[20];
int sum;
int use[20];
int n;
int good[20];
int closest;
void recurse(int maxl, int d, int s) {
  if (d == n) {
     if(sum > maxl) {return;}
    if (sum > closest) {
      closest = sum;
       FOR(i,0,n) {
        good[i] = use[i];
      }
    }
    return;
  }
  
 if(sum > maxl) {return;}
  
  use[d] = 1;
  sum += dur[d];
   
  recurse(maxl,d+1,sum);
  use[d] = 0;
  sum -= dur[d];
  recurse(maxl,d+1,sum);
  return;
}


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
    //  ofstream fout("");
    //  ifstream fin("");
    int l;
    while(cin >> l) {

      cin >> n;
      sum = 0;
      closest = 0;
      FOR(i,0,n) {
        cin >> dur[i];
        use[i] = 0;
        good[i] = 0;
      }
      recurse(l,0,0);
      FOR(i,0,n) {
        if (good[i]) cout << dur[i] << ' ';
      }
      cout << "sum:" << closest << endl; }
    // fin.close();
    //  fout.close();
}


/*
 ID: swagchicken1
 PROG:
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <cstring>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vector <int> > vvi;
typedef pair<int, int> pii;
typedef pair < pair < int, int >, int > piii;
typedef pair < pair <int, int > , pair <int, int> > piiii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)

#define endl '\n';

#define mp make_pair
#define pb push_back
#define f first
#define s second30

const int MOD = 1000000007;
double PI = 4*atan(1);

ll d,m,L[200] = {};
ll ks[11][201][21];  //M,N;R;
ll n,q,tot = 0;

ll recurse(ll M, ll N, ll R) {
      if(M == 0 || N == n) {
        if(M == 0) {
          return (R == 0) ? 1 : 0; 
        }
        return 0;
      }
      if(ks[M][N][R] != -1) {return ks[M][N][R];}
      
      ks[M][N][R] = recurse(M-1, N+1, (R+L[N] )% d) + recurse(M,N+1,R);
      return ks[M][N][R];
}

int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
    //  ofstream fout("");
    //  ifstream fin("");
    cin >> n >> q;
    int c = 1;
    while( n!= 0 && q != 0) {
      ll l[200] = {};
      FOR(i,0,n) {
        cin >> l[i];
      }
      cout << "SET " << c << ':' << endl; c++;
      FOR(i,0,q) {
        memset(ks,-1,sizeof ks);
        memset(L,0,sizeof L);
        cin >> d >> m;
        FOR(j,0,n) {
          L[j] = (l[j]%d + d)%d;
        }
        tot = recurse(m,0,0);
        cout << "QUERY " << i + 1 << ": " << tot << endl;
      }

      cin >> n >> q;
    }
    // fin.close();
    //  fout.close();
}


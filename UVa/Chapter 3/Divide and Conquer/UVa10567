/*
 ID: swagchicken1
 PROG:
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vector <int> > vvi;
typedef pair<int, int> pii;
typedef pair < pair < int, int >, int > piii;
typedef pair < pair <int, int > , pair <int, int> > piiii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)

#define endl '\n';

#define mp make_pair
#define pb push_back
#define f first
#define s second

const int MOD = 1000000007;
double PI = 4*atan(1);

int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
    //  ofstream fout("");
    //  ifstream fin("");
    vvi codes(52);
    string s; cin >> s;
    FOR(i,0,s.length()) {
      char ch = s[i];
      if (isupper(ch)) { codes[ch - 'A' + 26].pb(i);}
      else {codes[ch- 'a' ].pb(i);}
    }
    int q; cin >> q;
    FOR(i,0,q) {
      string fillbates;
      cin >> fillbates;
      int k = fillbates.length();
      int index = -1;
      int first = -1;
      bool good = true;
      FOR(j,0,k) {
        char p = fillbates[j];
        int state;
        if(isupper(p)) {state = p -'A' + 26;}
        else {state = p - 'a';}
        
        auto low = lower_bound(codes[state].begin(),codes[state].end(),index);
        
        
      
        
        if (low  == codes[state].end()) {
           good = false; break;
        }
        if (j == 0) {
          first =  codes[state][low - codes[state].begin()];
        }
        index = codes[state][low - codes[state].begin()]+ 1 ;
      }

      cout << (good ? "Matched " + to_string(first) + ' ' + to_string(index-1)  : "Not matched") << endl;
    }





    // fin.close();
    //  fout.close();
}


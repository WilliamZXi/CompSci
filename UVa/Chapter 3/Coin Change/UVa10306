/*
 ID: swagchicken1
 PROG:
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <cstring>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vector <int> > vvi;
typedef pair<int, int> pii;
typedef pair < pair < int, int >, int > piii;
typedef pair < pair <int, int > , pair <int, int> > piiii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)

#define endl '\n';

#define mp make_pair
#define pb push_back
#define f first
#define s second30

const int MOD = 1000000007;
double PI = 4*atan(1);


int coins[50][2];
int pos[310][310];
int nc,emod,least;


int dp(int x, int y) {
  pos[0][0] = 0;
  FOR(i,0,nc) {
    FOR(j,coins[i][0],301) {
      FOR(k,coins[i][1],301) {
        pos[j][k] = min(pos[j][k], pos[j - coins[i][0]][k - coins[i][1]] + 1);
      }
    }
  }
  
}


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
    //  ofstream fout("");
    //  ifstream fin("");
    int n;
    cin >> n;
    FOR(i,0,n) {

      cin >> nc >> emod;
      least = MOD;
      memset(coins,0,sizeof coins);
      FOR(a,0,310) {
        FOR(b,0,310) {
          pos[a][b] = MOD;
        }
      }
      FOR(j,0,nc) {
        cin >> coins[j][0] >> coins[j][1];
      }
      dp(0,0);
      int mini = MOD;
      
      FOR(a,0,310) {
        FOR(b,0,310) {
          if(a*a+b*b == emod*emod) mini = min(mini,pos[a][b]);
        }
      }
      if(mini == MOD) {cout << "not possible" << endl;}
      else {cout << mini << endl;}
    }
    // fin.close();
    //  fout.close();
}


/*
 ID: swagchicken1
 PROG:
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vector <int> > vvi;
typedef pair<int, int> pii;
typedef pair < pair < int, int >, int > piii;
typedef pair < pair <int, int > , pair <int, int> > piiii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)

#define endl '\n';

#define mp make_pair
#define pb push_back
#define f first
#define s second

const int MOD = 1000000007;
double PI = 4*atan(1);

int m,n,x,y,size,maxsize;
char grid[25][25];
char land;
int dx[4] = {-1,1,0,0}, dy[4] = {0,0,1,-1};

void ff(int x, int y) {
	size ++;
	grid[x][y] = land + 1;
	FOR(i,0,4) {
		int nx = x + dx[i], ny = y + dy[i];
		ny += m; ny %= m;
		if(nx >= 0 && nx < n && ny >= 0 && ny < m && grid[nx][ny] == land) {
			ff(nx,ny);
		}
	}
}

int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
    //  ofstream fout("");
    //  ifstream fin("");
    while(cin >> n >> m){
    	size = 0;
    	maxsize = 0;
    	FOR(i,0,n) {
    		FOR(j,0,m) {
    			cin >> grid[i][j];
    		}
    	}
    	cin >> x >> y;
    	land = grid[x][y];
    	ff(x,y);
    	size = 0;
    	FOR(i,0,n) {
    		FOR(j,0,m) {
    			if(grid[i][j] == land) {
    				size = 0;
    				ff(i,j);
    				maxsize = max(maxsize,size);
    			}
    		}
    	}
    	cout << maxsize << endl;
    }
    // fin.close();
    //  fout.close();
}


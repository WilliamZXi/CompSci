/*
 ID: swagchicken1
 PROG:
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <cstring>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vector <int> > vvi;
typedef pair<int, int> pii;
typedef pair < pair < int, int >, int > piii;
typedef pair < pair <int, int > , pair <int, int> > piiii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)

#define endl '\n';

#define mp make_pair
#define pb push_back
#define f first
#define s second

const int MOD = 1000000007;
double PI = 4*atan(1);


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
      ofstream fout("trapped.out");
      ifstream fin("trapped.in");
 
    int n; fin >> n;
    pii hb[4000] = {};
    FOR(i,0,n) {
      fin >> hb[i].s >> hb[i].f;
    }
    
    sort(hb,hb+n);
    
    
    int dist = 0;
    FOR(i,0,n-1) {
      
      int eng = hb[i+1].f - hb[i].f;
      int l = i, r = i+1;
      while( l != -1 && r != n) {
        eng = hb[r].f - hb[l].f;
        if(eng <= hb[l].s && eng <= hb[r].s) {
          break;
        }
        else {
          if(eng > hb[l].s) {
            l--;
         }
          if(eng > hb[r].s) {
            r++;
          }
        }
      }
      if (r != n && l != -1) {dist += hb[i+1].f - hb[i].f;}
      
    }
    fout << dist << endl;
    

    fin.close();
    fout.close();
}


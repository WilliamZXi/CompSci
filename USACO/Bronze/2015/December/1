
/*
 ID: swagchicken1
 PROG: namenum
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)
#define endl '\n'

#define mp make_pair
#define pb push_back
#define f first
#define s second

const int MOD = 1000000007;
double PI = 4*atan(1);



int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
    ofstream fout("marathon.out");
    ifstream fin("marathon.in");
    int n; fin >> n;
    int path[100000][2];
    FOR(i,0,n) {
        fin >> path[i][0] >> path[i][1];
    }
    int dist = 0;
    FOR(i,0,n-1) {
        dist += abs(path[i+1][0] - path[i][0])  +  abs(path[i+1][1] - path[i][1]);
    }
    int maxskip = 0;
    FOR(i,1,n-1) {
        int s1 = abs(path[i+1][0] - path[i][0])  +  abs(path[i+1][1] - path[i][1]);
        int s2 =  abs(path[i][0] - path[i-1][0])  +  abs(path[i][1] - path[i-1][1]);
        int s3 = abs(path[i+1][0] - path[i-1][0])  +  abs(path[i+1][1] - path[i-1][1]);
        maxskip = max(maxskip, s1 + s2 - s3);
    }
    fout << dist - maxskip;
    
    
      fin.close();
     fout.close();
}

/*
 ID: swagchicken1
 PROG:
 LANG: C++11
 */

#include <iostream>
#include <tuple>
#include <cmath>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <vector>
#include <fstream>
#include <iomanip>
#include <ctime>
#include <cctype>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector< vector <int> > vvi;
typedef pair<int, int> pii;
typedef pair < pair < int, int >, int > piii;
typedef pair < pair <int, int > , pair <int, int> > piiii;

#define FOR(i,a,b) for(int i = a; i < b; i ++)
#define RFOR(i,a,b) for(int i = a-1; i >= b; i --)

#define endl '\n';

#define mp make_pair
#define pb push_back
#define f first
#define s second

const int MOD = 1000000007;
double PI = 4*atan(1);

int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
  //    ofstream fout("cowtip.out");
//      ifstream fin("cowtip.in");
    int n;
    int grid[10][10] = {};
    cin >> n;
    FOR(i,0,n) {
      FOR(j,0,n) {
        char c; cin >> c;
        grid[i][j] = c - '0';
      }
    }
    int flipcount = 0;
    for(int i = n-1; i >= 0; i--) {
      for(int j = n-1; j>= 0; j--) {
        if (grid[i][j] == 1) {
          flipcount ++;
          for(int k = 0; k <= i; k ++) {
            for(int l = 0; l <= j; l++) {
              grid[k][l] ++; grid[k][l] %= 2;
            }
          }
        }
      }
    } 
   cout << flipcount;
  //   fin.close();
  //   fout.close();
}

